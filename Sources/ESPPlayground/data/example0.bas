REM String tokenizer
DEF TOKENIZE( TO_SPLIT , ARG)  
IDX = 0 
CUR_STRING = ""
FOR ICT = 0 TO LEN(TO_SPLIT)-1
  LET CHARV = MID( TO_SPLIT, ICT , 1 )
  IF CHARV <> "," THEN 
    CUR_STRING = CUR_STRING + CHARV 
  ELSE  
    IF IDX = ARG THEN
      RETURN CUR_STRING
    ENDIF
    CUR_STRING = "" 
    IDX = IDX + 1
  ENDIF
NEXT ICT 
ENDDEF  

REM Obtain payload data for this task
INCOMING_VALUE=TOKENIZE(INPUTPAYLOAD,0)
INCOMING_STRING=TOKENIZE(INPUTPAYLOAD,1)

REM Work with the data
OUTGOING_VALUE=VAL(INCOMING_VALUE)+1
OUTGOING_STRING=INCOMING_STRING+" EXECUTED"

REM Return payload after execution
OUTPUTPAYLOAD=STR(OUTGOING_VALUE)+","+OUTGOING_STRING+","
